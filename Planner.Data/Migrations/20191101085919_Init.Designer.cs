// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Planner.Data.Context;

namespace Planner.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191101085919_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Planner.Entities.Domain.AppEntryLoad.AppDiscipline.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AmountOfHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("ECTS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FirstSemesterId")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SecondSemesterId")
                        .HasColumnType("int");

                    b.Property<string>("WeeksInFirstSemester")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeeksInSecondSemester")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FirstSemesterId");

                    b.HasIndex("SecondSemesterId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppEntryLoad.AppDiscipline.FirstSemester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Credit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoursAll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndividualWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Laboratory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lectures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Practical")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FirstSemesters");
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppEntryLoad.AppDiscipline.SecondSemester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Credit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoursAll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndividualWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Laboratory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lectures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Practical")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SecondSemesters");
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppEntryLoad.AppDiscipline.SelectedDiscipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("SelectedDisciplines");
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppEntryLoad.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Classification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Classification = "вип",
                            CodeDepartment = "обк",
                            Name = "Обліку і бізнес-консалтингу"
                        },
                        new
                        {
                            Id = 2,
                            Classification = "вип",
                            CodeDepartment = "мбеа",
                            Name = "Міжнародного бізнесу та економічного аналізу"
                        },
                        new
                        {
                            Id = 3,
                            Classification = "заг",
                            CodeDepartment = "вмем",
                            Name = "Вищої математики та економіко-математичних методів"
                        },
                        new
                        {
                            Id = 4,
                            Classification = "заг",
                            CodeDepartment = "фп",
                            Name = "Філософії та політології"
                        },
                        new
                        {
                            Id = 5,
                            Classification = "вип",
                            CodeDepartment = "ф",
                            Name = "Фінансів"
                        },
                        new
                        {
                            Id = 6,
                            Classification = "вип",
                            CodeDepartment = "бсфп",
                            Name = "Банківської справи і фінансових послуг"
                        },
                        new
                        {
                            Id = 7,
                            Classification = "вип",
                            CodeDepartment = "мсо",
                            Name = "Митної справи та оподаткування"
                        },
                        new
                        {
                            Id = 8,
                            Classification = "вип",
                            CodeDepartment = "мле",
                            Name = "Менеджменту, логістики та економіки"
                        },
                        new
                        {
                            Id = 9,
                            Classification = "вип",
                            CodeDepartment = "мб",
                            Name = "Менеджменту та бізнесу"
                        },
                        new
                        {
                            Id = 10,
                            Classification = "вип",
                            CodeDepartment = "ем",
                            Name = "Економіки і маркетингу"
                        },
                        new
                        {
                            Id = 11,
                            Classification = "вип",
                            CodeDepartment = "іс",
                            Name = "Інформаційних систем"
                        },
                        new
                        {
                            Id = 12,
                            Classification = "вип",
                            CodeDepartment = "ксіт",
                            Name = "Комп’ютерних систем і технологій"
                        },
                        new
                        {
                            Id = 13,
                            Classification = "вип",
                            CodeDepartment = "ек",
                            Name = "Економічної кібернетики"
                        },
                        new
                        {
                            Id = 14,
                            Classification = "заг",
                            CodeDepartment = "ікт",
                            Name = "Інформатики та комп’ютерної техніки"
                        },
                        new
                        {
                            Id = 15,
                            Classification = "заг",
                            CodeDepartment = "птебжд",
                            Name = "Природоохоронних технологій, екології та безпеки життєдіяльності"
                        },
                        new
                        {
                            Id = 16,
                            Classification = "вип",
                            CodeDepartment = "кіт",
                            Name = "Кібербезпеки та інформаційних технологій"
                        },
                        new
                        {
                            Id = 17,
                            Classification = "вип",
                            CodeDepartment = "сеп",
                            Name = "Статистики і економічного прогнозування"
                        },
                        new
                        {
                            Id = 18,
                            Classification = "вип",
                            CodeDepartment = "есн",
                            Name = "Економіки та соціальних наук"
                        },
                        new
                        {
                            Id = 19,
                            Classification = "вип",
                            CodeDepartment = "епм",
                            Name = "Економіки підприємства та менеджменту"
                        },
                        new
                        {
                            Id = 20,
                            Classification = "вип",
                            CodeDepartment = "пре",
                            Name = "Правового регулювання економіки"
                        },
                        new
                        {
                            Id = 21,
                            Classification = "вип",
                            CodeDepartment = "дупаре",
                            Name = "Державного управління, публічного адміністрування та регіональної економіки"
                        },
                        new
                        {
                            Id = 22,
                            Classification = "вип",
                            CodeDepartment = "етеп",
                            Name = "Економічної теорії та економічної політики"
                        },
                        new
                        {
                            Id = 23,
                            Classification = "вип",
                            CodeDepartment = "уск",
                            Name = "Управління соціальними комунікаціями"
                        },
                        new
                        {
                            Id = 24,
                            Classification = "вип",
                            CodeDepartment = "мемзед",
                            Name = "Міжнародної економіки та менеджменту ЗЕД"
                        },
                        new
                        {
                            Id = 25,
                            Classification = "вип",
                            CodeDepartment = "т",
                            Name = "Туризму"
                        },
                        new
                        {
                            Id = 26,
                            Classification = "вип",
                            CodeDepartment = "піфп",
                            Name = "Педагогіки, іноземної філології та перекладу"
                        },
                        new
                        {
                            Id = 27,
                            Classification = "заг",
                            CodeDepartment = "умпіг",
                            Name = "Українознавства і мовної підготовки іноземних громадян"
                        },
                        new
                        {
                            Id = 28,
                            Classification = "заг",
                            CodeDepartment = "фвс",
                            Name = "Фізичного виховання та спорту"
                        },
                        new
                        {
                            Id = 29,
                            Classification = "заг",
                            CodeDepartment = "іммк",
                            Name = "Іноземних мов та міжкультурної комунікації"
                        });
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppEntryLoad.EntryLoad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AmountOfForeignersStudents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmountOfStudents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmountOfStudentsStreams")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectingOfStudentStreams")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Course")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<string>("EducationalDegree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfGroups")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfSubGroups")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RealNumberOfGroups")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("FacultyId");

                    b.ToTable("EntryLoads");
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppEntryLoad.EntryLoadsProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeUpload")
                        .HasColumnType("datetime2");

                    b.Property<int>("HoursPerRate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntryLoadsProperties");
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppEntryLoad.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeFaculty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodeFaculty = "кімб",
                            Name = "Факультет консалтингу і міжнародного бізнесу"
                        },
                        new
                        {
                            Id = 2,
                            CodeFaculty = "фф",
                            Name = "Фінансовий факультет"
                        },
                        new
                        {
                            Id = 3,
                            CodeFaculty = "мім",
                            Name = "Фікультет менеджменту і маркетингу"
                        },
                        new
                        {
                            Id = 4,
                            CodeFaculty = "еі",
                            Name = "Факультет економічної інформатики"
                        },
                        new
                        {
                            Id = 5,
                            CodeFaculty = "еп",
                            Name = "Факультет економіки і права"
                        },
                        new
                        {
                            Id = 6,
                            CodeFaculty = "мев",
                            Name = "Факультет міжнародних економічних відносин"
                        },
                        new
                        {
                            Id = 7,
                            CodeFaculty = "піг",
                            Name = "Факультет підготовки іноземних громадян"
                        },
                        new
                        {
                            Id = 8,
                            CodeFaculty = "асп",
                            Name = "Аспірвнтура"
                        },
                        new
                        {
                            Id = 9,
                            CodeFaculty = "всі",
                            Name = "Додаткові предмети та майнори"
                        });
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppUser.IndividualPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IndividualPlans");
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppUser.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Завідувач наукового секотору"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Викладач"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Голова навчальної частини"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Завідувач кафедри"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Адміністратор"
                        });
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppUser.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("HoursPerRate")
                        .HasColumnType("int");

                    b.Property<string>("ImageSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HoursPerRate = 0,
                            Login = "admin@gmail.com",
                            Name = "Админ",
                            Password = "T15oO9/ZYIoPbzifVCRgRAZ+MQfamV9vb4nWBde0xts=",
                            Rate = 0
                        },
                        new
                        {
                            Id = 2,
                            HoursPerRate = 0,
                            Login = "prepod@gmail.com",
                            Name = "Препод",
                            Password = "T15oO9/ZYIoPbzifVCRgRAZ+MQfamV9vb4nWBde0xts=",
                            Rate = 0
                        },
                        new
                        {
                            Id = 3,
                            HoursPerRate = 0,
                            Login = "uchebn@gmail.com",
                            Name = "Начальник учебной части",
                            Password = "T15oO9/ZYIoPbzifVCRgRAZ+MQfamV9vb4nWBde0xts=",
                            Rate = 0
                        },
                        new
                        {
                            Id = 4,
                            HoursPerRate = 0,
                            Login = "caf@gmail.com",
                            Name = "Зав кафедры",
                            Password = "T15oO9/ZYIoPbzifVCRgRAZ+MQfamV9vb4nWBde0xts=",
                            Rate = 0
                        },
                        new
                        {
                            Id = 5,
                            HoursPerRate = 0,
                            Login = "centr@gmail.com",
                            Name = "Зав научного центра",
                            Password = "T15oO9/ZYIoPbzifVCRgRAZ+MQfamV9vb4nWBde0xts=",
                            Rate = 0
                        });
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppEntryLoad.AppDiscipline.Discipline", b =>
                {
                    b.HasOne("Planner.Entities.Domain.AppEntryLoad.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Planner.Entities.Domain.AppEntryLoad.AppDiscipline.FirstSemester", "FirstSemester")
                        .WithMany()
                        .HasForeignKey("FirstSemesterId");

                    b.HasOne("Planner.Entities.Domain.AppEntryLoad.AppDiscipline.SecondSemester", "SecondSemester")
                        .WithMany()
                        .HasForeignKey("SecondSemesterId");
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppEntryLoad.Department", b =>
                {
                    b.HasOne("Planner.Entities.Domain.AppEntryLoad.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId");
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppEntryLoad.EntryLoad", b =>
                {
                    b.HasOne("Planner.Entities.Domain.AppEntryLoad.AppDiscipline.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId");

                    b.HasOne("Planner.Entities.Domain.AppEntryLoad.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId");
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppUser.IndividualPlan", b =>
                {
                    b.HasOne("Planner.Entities.Domain.AppUser.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Planner.Entities.Domain.AppUser.User", b =>
                {
                    b.HasOne("Planner.Entities.Domain.AppEntryLoad.Department", null)
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Planner.Entities.Domain.AppUser.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
